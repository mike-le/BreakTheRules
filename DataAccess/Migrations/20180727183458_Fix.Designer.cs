// <auto-generated />
using System;
using BTR.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DataAccess.Migrations
{
    [DbContext(typeof(BTRContext))]
    [Migration("20180727183458_Fix")]
    partial class Fix
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.1-rtm-30846")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BTR.DataAccess.Entities.Audit", b =>
                {
                    b.Property<int>("OwnerId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("ChangeDt");

                    b.Property<string>("ChangeOwner");

                    b.Property<string>("KeyValues");

                    b.Property<string>("NewValues");

                    b.Property<string>("OldValues");

                    b.Property<string>("TableName");

                    b.HasKey("OwnerId");

                    b.ToTable("Audits");
                });

            modelBuilder.Entity("BTR.DataAccess.Entities.CommentEntity", b =>
                {
                    b.Property<int>("CommentId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Message")
                        .IsRequired();

                    b.Property<string>("Owner")
                        .IsRequired();

                    b.Property<int?>("ParentCommentId");

                    b.Property<int?>("ParentIdeaId");

                    b.Property<int>("Score");

                    b.Property<DateTime>("SubmitDt");

                    b.HasKey("CommentId");

                    b.HasIndex("ParentCommentId");

                    b.HasIndex("ParentIdeaId");

                    b.ToTable("ApiComments");
                });

            modelBuilder.Entity("BTR.DataAccess.Entities.IdeaEntity", b =>
                {
                    b.Property<int>("PostId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Message")
                        .IsRequired();

                    b.Property<DateTime>("ModifiedDt");

                    b.Property<string>("Owner")
                        .IsRequired();

                    b.Property<int>("Score");

                    b.Property<DateTime>("SubmitDt");

                    b.Property<int>("ThemeId");

                    b.HasKey("PostId");

                    b.HasIndex("ThemeId");

                    b.ToTable("ApiIdeas");
                });

            modelBuilder.Entity("BTR.DataAccess.Entities.Status", b =>
                {
                    b.Property<int>("StatusId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IdeaId");

                    b.Property<string>("Response");

                    b.Property<int>("StatusCode");

                    b.Property<DateTime>("SubmitDt");

                    b.HasKey("StatusId");

                    b.HasIndex("IdeaId")
                        .IsUnique();

                    b.ToTable("Status");
                });

            modelBuilder.Entity("BTR.DataAccess.Entities.ThemeEntity", b =>
                {
                    b.Property<int>("ThemeId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CloseDt");

                    b.Property<string>("Description")
                        .IsRequired();

                    b.Property<DateTime>("OpenDt");

                    b.Property<string>("Owner")
                        .IsRequired();

                    b.Property<string>("Title")
                        .IsRequired();

                    b.HasKey("ThemeId");

                    b.ToTable("ApiThemes");
                });

            modelBuilder.Entity("BTR.DataAccess.Entities.CommentEntity", b =>
                {
                    b.HasOne("BTR.DataAccess.Entities.CommentEntity", "ParentComment")
                        .WithMany("Comments")
                        .HasForeignKey("ParentCommentId");

                    b.HasOne("BTR.DataAccess.Entities.IdeaEntity", "ParentIdea")
                        .WithMany("Comments")
                        .HasForeignKey("ParentIdeaId");
                });

            modelBuilder.Entity("BTR.DataAccess.Entities.IdeaEntity", b =>
                {
                    b.HasOne("BTR.DataAccess.Entities.ThemeEntity", "Theme")
                        .WithMany("Ideas")
                        .HasForeignKey("ThemeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("BTR.DataAccess.Entities.Status", b =>
                {
                    b.HasOne("BTR.DataAccess.Entities.IdeaEntity", "Idea")
                        .WithOne("IdeaStatus")
                        .HasForeignKey("BTR.DataAccess.Entities.Status", "IdeaId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
